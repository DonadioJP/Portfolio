---
title: "João Pedro Donadio"
subtitle: "Agricultural Engineer | Research Data Analyst"
---

:::::: columnsABC
::: column1
![](images/8ac03fa4-397b-4d5e-8d64-ad34940eac8f-02.jpeg){#profile-pic .rounded .shadow fig-align="left"} [jp.donadio\@gmail.com](mailto:jp.donadio@gmail.com)\
[LinkedIn](https://www.linkedin.com/in/jo%C3%A3o-pedro-donadio-1543821a0/)\
[GitHub](https://github.com/DonadioJP)\
[ORCID](https://orcid.org/0000-0002-6728-4373)
:::

:::: column2
::: bio-box
**Hi, I’m João Pedro Donadio** — an Agricultural Engineer and Research Data Analyst passionate about turning raw data into meaningful insights. I am specialized in bridging the gap between fieldwork and analytics, helping researchers and decision-makers make informed, data-driven choices.

My toolbox includes SQL, R, statistical modeling, Quarto, MS Office (Excel, Word, Powerpoint...), and Canva. I'm also comfortable with version control on GitHub to ensure clean and collaborative workflows.

Driven by a deep curiosity about how systems work, I bring a unique blend of technical rigor and hands-on field experience. With a background in sustainable livestock farming and applied research, I focus on practical solutions for real-world challenges.
:::
::::
::::::

::: bio-box2
I’m here to help you connect science and strategy by:

-   **Designing rigorous studies** with clear, actionable objectives

-   **Collecting and cleaning data** from diverse sources

-   **Uncovering patterns** through robust statistical analysis

-   **Creating intuitive visualizations** that bring stories to life

-   **Delivering dynamic reports** for intelligent decision-making
:::

::: services
```{r echo=FALSE}
library(ggplot2)
library(ggimage)
library(ggiraph)
library(patchwork)

# --- First Plot (p1) ---
services1 <- data.frame(
  stage = c("Project Planning", "Data Collection", "Cleaning"),
  x = 1:3,
  y = rep(1.03, 3),
  image = paste0("images_plot/", c("project-planning", "data-collection", "cleaning"), ".png"),
  tooltip = c("Define project scope and objectives",
              "Collect data from various sources",
              "Clean and preprocess the data")
)

p1 <- ggplot(services1, aes(x, y)) +
  geom_line(linewidth = 5, color = "#2E48AB", alpha = 0.7) +
  geom_image(aes(image = image), size = 0.6) +
  geom_text(aes(label = stage), 
            color = "black", size = 3.8,
            nudge_y = -0.05, vjust = 3.8, fontface = "bold") +
  geom_point_interactive(aes(tooltip = tooltip, data_id = stage), size = 15, alpha = 0) +
  scale_y_continuous(limits = c(0.9, 1.1)) +
  scale_x_continuous(limits = c(0.5, 3.5)) +
  theme_void() +
  theme(panel.background = element_rect(fill = "white", color = NA))

# --- Second Plot (p2) ---
services2 <- data.frame(
  stage = c("Exploratory Analysis", "Statistical Analysis", "Visualization", "Reporting"),
  x = 1:4,
  y = rep(1, 4),
  image = paste0("images_plot/", c("exploratory-analysis", "statistical-analysis",
                                 "visualization", "reporting"), ".png"),
  tooltip = c("Explore patterns and relationships",
              "Apply statistical models",
              "Create visual representations",
              "Communicate findings effectively")
)

p2 <- ggplot(services2, aes(x, y)) +
  geom_line(linewidth = 5, color = "#2E48AB", alpha = 0.7) +
  geom_image(aes(image = image), size = 0.6) +
  geom_text(
    aes(label = stage),
    color = "black",
    size = 3.8,
    position = position_nudge(y = -0.15),  # Nudge mais pronunciado
    vjust = 3.8,  # Centralização vertical padrão
    fontface = "bold"
  ) +
  geom_point_interactive(aes(tooltip = tooltip, data_id = stage), size = 15, alpha = 0) +
  scale_y_continuous(limits = c(0.7, 1.4)) +  # Mais espaço para o texto
  scale_x_continuous(limits = c(0.5, 4.5)) +
  theme_void() +
  theme(
    panel.background = element_rect(fill = "white", color = NA),
    plot.margin = margin(0, 0, 0.5, 0, "cm")  # Margem inferior para o texto
  )

# --- Combine Plots ---
combined <- (p1 / p2) +
  plot_layout(heights = c(1, 1)) &
  theme(
    plot.margin = margin(0, 0, 0, 0, "cm"))

combined <- patchwork::wrap_elements(full = combined) +
  theme(plot.background = element_rect(color = "#2E48AB", fill = NA))

girafe(ggobj = combined,
       options = list(
         opts_hover(css = "transform: scale(1.3); transition: 0.2s;"),
         opts_tooltip(css = "background-color:white; color:black; 
                      border:1px solid #ccc; padding:5px; 
                      border-radius:1px;"),
         opts_sizing(width = 0.9)  # Controls overall widget width
       ),
      width_svg = 6.8,  # Largura em polegadas
       height_svg = 4)
```
:::

::: quote-box
*"Data alone isn’t enough, it must be analysed deeply, visualized clearly, and communicated effectively to drive meaningful decisions."*
:::

::: cv-button
```{r}
#| echo: false
htmltools::tags$div(
  class = "cv-button-box",
  href = "cv.qmd",
  style = "cursor: pointer;",
  "Want to know more? Access my CV"
)
```
:::

```{r}
#| echo: FALSE
#| results: asis

library(htmltools)

# Standard divider
divider <- function(thick = FALSE) {
  class <- ifelse(thick, "section-divider thick", "section-divider")
  tags$hr(class = class)
}

# Usage between sections:
divider()
```

::: Portfolio
### Portfolio

```{r}
#| echo: FALSE
#| results: asis

library(htmltools)

portfolio_gallery <- function() {
  div(class = "portfolio-gallery",
    # Item 1 (Mais recente)
    div(class = "portfolio-item",
        a(href = "watercalves.qmd",
          img(src = "images/Calves_water.png", class = "portfolio-image", alt = "calves_water")
        ),
        p(class = "portfolio-theme", "Experiment"),
        h3(class = "portfolio-title", "Nipple water troughs for dairy calves"),
        p(class = "portfolio-date", "November 2024")
    ),
    
    # Item 2 (Projeto 2o mais recente)
    div(class = "portfolio-item",
        a(href = "metaanalysis.qmd",
          img(src = "images/IMG_20240111_204935_6162.png", class = "portfolio-image", alt = "groupcalves")
        ),
        p(class = "portfolio-theme", "Meta-analysis"),
        h3(class = "portfolio-title", "Group-housed Calves"),
        p(class = "portfolio-date", "June 2024")
    ),
    
    # Item 3 (Ver portfólio completo)
    div(class = "portfolio-item see-more",
    a(href = "projects.qmd", class = "full-portfolio-link",
      div(class = "content-wrapper",
        img(src = "images/seemore.png", class = "portfolio-image", alt = "Full Portfolio"),
        p(class = "portfolio-theme", "Portfolio"),
        h3(class = "portfolio-title", "See more projects"),
        p(class = "portfolio-date", "Since 2023")
      ),
      div(class = "portfolio-overlay",
          div(class = "plus-sign", "+")
      )
    )
))
}

portfolio_gallery()
```
:::

```{r echo=FALSE}
divider()
```

::: contact
### Contact me ✉️ {#contact}
:::

```{r echo=FALSE}
library(htmltools)

formspree_form <- function(form_id) {
  tags$div(
    class = "contact-form",
    tags$form(
      action = "https://formspree.io/f/xjkwbbgg"),
      method = "POST",
      tags$div(
        class = "form-group",
        tags$label(`for` = "name", class = "form-label", "Name"),
        tags$input(
          type = "text",
          class = "form-control",
          id = "name",
          name = "name",
          required = NA
        )
      ),
      tags$div(
        class = "form-group",
        tags$label(`for` = "email", class = "form-label", "Email"),
        tags$input(
          type = "email",
          class = "form-control",
          id = "email",
          name = "_replyto",
          required = NA
        )
      ),
      tags$div(
        class = "form-group",
        tags$label(`for` = "message", class = "form-label", "Message"),
        tags$textarea(
          class = "form-control",
          id = "message",
          name = "message",
          required = NA
        )
      ),
    tags$div(
  class = "form-group btn-container",
  tags$button(
    type = "submit",
    class = "btn btn-primary",
    "Send"
  )
)
      )
}

formspree_form("xjkwbbgg")
```